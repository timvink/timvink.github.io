{"version": "https://jsonfeed.org/version/1", "title": "TimVink.nl", "home_page_url": "https://timvink.nl/", "feed_url": "https://timvink.nl/feed_json_created.json", "description": "Personal site and blog of Tim Vink", "icon": null, "authors": [{"name": "Tim Vink"}], "language": "en", "items": [{"id": "https://timvink.nl/blog/benchmarking-sklearn-python/", "url": "https://timvink.nl/blog/benchmarking-sklearn-python/", "title": "Benchmarking scikit-learn across python versions using uv", "content_html": "<h1>Benchmarking scikit-learn across python versions using <code>uv</code></h1>\n<p>When python 3.11 came out 2 years ago (24 October 2022) it promised to be 10-60% faster than python 3.10, and 1.25x faster on the standard benchmark suite (see the <a href=\"https://docs.python.org/3/whatsnew/3.11.html\">what's new in 3.11</a>). I've always wondered how that translates to training machine learning models in python, but I couldn't be bothered to write a benchmark. That is, until <a href=\"https://astral.sh/\">astral</a> released <a href=\"https://github.com/astral-sh/uv/releases/tag/0.4.0\">uv 0.4.0</a> which introduces <a href=\"https://astral.sh/blog/uv-unified-python-packaging\">\"<em>a new, unified toolchain that takes the complexity out of Python development</em>\"</a>.</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2024-09-20-benchmarking-sklearn-python.png", "date_published": "2024-09-22T22:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/constrained-intelligence/", "url": "https://timvink.nl/blog/constrained-intelligence/", "title": "Thoughts on Constrained Intelligence", "content_html": "<h1>Thoughts on Constrained Intelligence</h1>\n<p>In my career I've focused mostly on applying what is now called 'traditional machine learning': regression, classification, time series, anomaly detection and clustering algorithms. You could frame machine learning as applying an algorithmic 'constrained intelligence' to a specific business problem. The challenge has always been to 'unconstrain the intelligence' (f.e. by tuning hyperparameters) and to further specify the business problem (proper target definition, clean data, proper cross validation schemes). The advent of large language models is starting to flip the equation; from 'unconstraining' intelligence to 'constraining' it instead.</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2024-02-12-constrained-intelligence.png", "date_published": "2024-02-12T09:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/sklearn-visualizations-in-mkdocs/", "url": "https://timvink.nl/blog/sklearn-visualizations-in-mkdocs/", "title": "Inserting interactive scikit-learn diagrams into mkdocs", "content_html": "<h1>Inserting interactive scikit-learn diagrams into mkdocs</h1>\n<p><code>scikit-learn</code> has this nice feature where you can <a href=\"https://scikit-learn.org/stable/auto_examples/miscellaneous/plot_pipeline_display.html\">display an interactive visualization of a pipeline</a>. \nThis post shows how to insert interactive diagrams into your mkdocs documentation, which is great for documenting your machine learning projects.</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2023-10-14-scikit-learn-interactive-diagram.png", "date_published": "2023-10-14T08:00:00+00:00", "authors": [{"name": "timvink"}], "tags": ["today-I-learned"]}, {"id": "https://timvink.nl/blog/databricks-query-speed/", "url": "https://timvink.nl/blog/databricks-query-speed/", "title": "Speeding up databricks SQL queries", "content_html": "<h1>Speeding up databricks SQL queries</h1>\n<p>Retrieving data from a datawarehouse is a common operation for any data scientist. In August 2021 databricks released a blog post describing <a href=\"https://www.databricks.com/blog/2021/08/11/how-we-achieved-high-bandwidth-connectivity-with-bi-tools.html\">how [Databricks] achieved high-bandwidth connectivity with BI-tools</a>. In it, they introduced <em>cloud fetch,</em> promising a 12x experimental speedup on a dataset with 4M rows and 20 columns, achieved mainly by doing downloads in parallel. When I read this I immediately dove head-first into the rabbit hole, hoping to reduce the time from running a SQL query to having it inside a <code>pandas</code> dataframe. This blogpost details the journey on how I achieved a significant speedup for our databricks queries.</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2022-12-18-databricks-query-speed.png", "date_published": "2022-12-19T08:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/is-xgboost-all-we-need/", "url": "https://timvink.nl/blog/is-xgboost-all-we-need/", "title": "Is XGBoost really all we need?", "content_html": "<h1>Is XGBoost really all we need?</h1>\n<p>If you have experience building machine learning models on tabular data you will have experienced that gradient boosting based algorithms like <a href=\"https://catboost.ai/\">catboost</a>, <a href=\"https://lightgbm.readthedocs.io/\">lightgbm</a> and <a href=\"https://xgboost.readthedocs.io/\">xgboost</a> are almost always superior.</p>\n<p>It's not for nothing Bojan Tunguz (a quadruple kaggle grandmaster employed by Nvidia) states:</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">XGBoost Is All You Need<br><br>Deep Neural Networks and Tabular Data: A Survey<a href=\"https://t.co/Z2KsHP3fvp\">https://t.co/Z2KsHP3fvp</a> <a href=\"https://t.co/uh5NLS1fVP\">pic.twitter.com/uh5NLS1fVP</a></p>&mdash; Bojan Tunguz (@tunguz) <a href=\"https://twitter.com/tunguz/status/1509197350576672769?ref_src=twsrc%5Etfw\">March 30, 2022</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>... but aren't we all fooling ourselves?</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2022-09-19-is-xgboost-all-we-need.png", "date_published": "2022-09-19T08:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/post-balanced-trees/", "url": "https://timvink.nl/blog/post-balanced-trees/", "title": "Adjusting the bootstrap in Random Forest", "content_html": "<h1>Adjusting the bootstrap in Random Forest</h1>\n<p>The RandomForest algorithm was introduced by Breiman back in 2001 (<a href=\"https://www.stat.berkeley.edu/~breiman/randomforest2001.pdf\">paper</a>). In 2022 it is still a commonly used algorithm by many data scientists. The only difference is that the current scikit-learn implementation combines classifiers by averaging their probabilistic prediction, instead of letting each classifier vote for a single class (<a href=\"https://scikit-learn.org/stable/modules/ensemble.html#random-forests\">source</a>).</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2022-06-15-post-balanced-trees.png", "date_published": "2022-06-15T08:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/reproducible-reports-with-mkdocs/", "url": "https://timvink.nl/blog/reproducible-reports-with-mkdocs/", "title": "Reproducible Reports with MkDocs", "content_html": "<h1>Reproducible Reports with MkDocs</h1>\n<p>In the post <a href=\"https://timvink.nl/mkdocs-for-tech-doc/\">Using MkDocs for technical reporting</a> I explained how MkDocs works and why it's a good choice for writing technical reports.</p>\n<p>In this post I'll explain how to work with different MkDocs plugins to make your documentation more reproducible. I find the topic exciting as the combination of these plugins is especially powerful. That's also why I wrote multiple MkDocs plugins and contributed to many more to make the workflow even smoother.</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2022-01-05-reproducible-reports-with-mkdocs.png", "date_published": "2022-01-19T13:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/introducing-skorecard/", "url": "https://timvink.nl/blog/introducing-skorecard/", "title": "Introducing Skorecard for building better logistic regression models", "content_html": "<h1>Introducing Skorecard for building better logistic regression models</h1>\n<p><a href=\"https://github.com/ing-bank/skorecard\"><code>skorecard</code></a> is an open source python package that provides scikit-learn compatible tools for bucketing categorical and numerical features and building traditional credit risk acceptance models (scorecards) on top of them. These tools have applications outside of the context of scorecards and this blogpost will show you how to use them to potentially improve your own machine learning models.</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2021-12-24-introducing-skorecard.png", "date_published": "2021-12-24T13:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/mkdocs-for-tech-doc/", "url": "https://timvink.nl/blog/mkdocs-for-tech-doc/", "title": "Using MkDocs for technical reporting", "content_html": "<h1>Using MkDocs for technical reporting</h1>\n<p>In this post I will explain why <a href=\"https://www.mkdocs.org/\">MkDocs</a> is well suited for writing technical reports on machine learning models and introduce relevant parts of the MkDocs ecosystem.</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2020-09-15-mkdocs-for-tech-doc.png", "date_published": "2020-09-15T07:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/streamlit-threshold-app/", "url": "https://timvink.nl/blog/streamlit-threshold-app/", "title": "Using streamlit to set the threshold for a classifier", "content_html": "<h1>Using streamlit to set the threshold for a classifier</h1>\n<p>In this post I will demonstrate how to use <a href=\"https://docs.streamlit.io/en/stable/index.html\">streamlit</a> to build an app that can help interactively set the threshold for your machine learning classifier. See also the <a href=\"https://github.com/timvink/demo_streamlit_threshold_classifier\">code</a> and the <a href=\"https://share.streamlit.io/timvink/demo_streamlit_threshold_classifier/app.py\">live demo app</a>.</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2020-07-17-streamlit-threshold-app.png", "date_published": "2020-07-17T07:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/central-limit-theorem/", "url": "https://timvink.nl/blog/central-limit-theorem/", "title": "From Central Limit Theorem to Bayes's Theorem via Linear Regression", "content_html": "<h1>From Central Limit Theorem to Bayes's Theorem via Linear Regression</h1>\n<p>Take any statistics course and you'll have heard about the central limit theorem. And you might have read about Bayes' theorem offering a different, more probabilistic method. In this long post I'll show how they are related, explaining concepts such as linear regression along the way. I'll use math, history, code, examples and plots to show you why both theorems are still very relevant for modern data scientists. </p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2019-05-16-central-limit-theorem.png", "date_published": "2019-05-16T07:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/closest-coordinates/", "url": "https://timvink.nl/blog/closest-coordinates/", "title": "Quickly finding closest coordinates using K-D-Trees", "content_html": "<h1>Quickly finding closest coordinates using K-D-Trees</h1>\n<p>This post will demonstrate how to quickly find for a given coordinate (latitude and longitude), the closest coordinate out of a list of other coordinates using K-D-Trees and the Euclidean distance.</p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2019-02-18-closest-coordinates.png", "date_published": "2019-02-18T00:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}, {"id": "https://timvink.nl/blog/google-cloud-functions/", "url": "https://timvink.nl/blog/google-cloud-functions/", "title": "How to develop Python Google Cloud Functions", "content_html": "<h1>How to develop Python Google Cloud Functions</h1>\n<p>I've been using Google's <a href=\"https://cloud.google.com/functions/\">Cloud Functions</a> for a project recently. My use case was building a small webscraper that periodically downloads excel files from a list of websites, parses them and write the structured data into a BigQuery database. In this blogpost I'll show you why going serverless with cloud functions is so amazing and cost-effective. And I'll discuss some practical problems that have solutions\nyou can't easily find in the <a href=\"https://cloud.google.com/functions/docs/\">documentation</a> or stackoverflow. </p>", "image": "https://timvink.nl/assets/images/social/blog/posts/2019-01-11-google-cloud-functions.png", "date_published": "2019-01-11T00:00:00+00:00", "authors": [{"name": "timvink"}], "tags": []}]}